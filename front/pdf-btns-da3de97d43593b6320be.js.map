{"version":3,"sources":["webpack:///./src/containers/FormDealer.js","webpack:///./src/containers/FormEmail.js","webpack:///./src/containers/FormPopup.js","webpack:///./src/helpers/groupChoicesByPageId.ts","webpack:///./src/pdf/PdfStyles.ts","webpack:///./src/pdf/registerFonts.ts","webpack:///./src/pdf/PdfHeader.tsx","webpack:///./src/pdf/PdfFooter.tsx","webpack:///./src/pdf/PdfChoice.tsx","webpack:///./src/pdf/PdfChoicePages.tsx","webpack:///./src/pdf/PdfDocument.tsx","webpack:///./src/containers/SummaryButtons.js"],"names":["blob","useState","fname","setFname","lname","setLname","email","setEmail","phone","setPhone","address","setAddress","city","setCity","state","setState","zip","setZip","errMessage","setErrMessage","loading","setLoading","success","setSuccess","className","onSubmit","e","preventDefault","bodyFormData","FormData","append","axios","method","url","data","headers","then","response","status","message","catch","htmlFor","name","type","onChange","target","value","disabled","selected","isOpen","onClose","children","onClick","size","choices","grouped","allIds","forEach","id","item","byId","pageId","groupedChoices","push","StyleSheet","body","paddingTop","paddingBottom","paddingHorizontal","heading","fontSize","textAlign","fontFamily","fontWeight","textTransform","title","row","display","flexDirection","flexWrap","width","padding","bordered","borderBottomColor","borderBottomWidth","borderBottomStyle","column","flex","doubleColumn","alignItems","text","price","color","fontFamilies","map","Font","imageSrc","discount","style","styles","src","fixed","position","bottom","left","right","marginTop","connect","packaged","formData","page","choice","isPackaged","includes","section","entities","sections","sectionId","packagedChoice","packagedChoiceOwnerId","fromId","packagedChoiceOwner","undefined","packagedChoiceOwnerLabel","label","short","quantity","formatMoney","choicesGroupedByPage","registerFonts","family","fonts","PdfDocConnect","total","getTotalPrice","groupChoicesByPageId","post","post_title","image","pages","store","formPopup","setFormPopup","form","setForm","closePopup","EmailPopup","DealerPopup","document","PdfDocument","error","href","download"],"mappings":"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","file":"pdf-btns-da3de97d43593b6320be.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nconst FormDealer = ({ blob }) => {\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const submitForm = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"contact_fname\", fname);\n    bodyFormData.append(\"contact_lname\", lname);\n    bodyFormData.append(\"contact_email\", email);\n    bodyFormData.append(\"contact_phone\", phone);\n    bodyFormData.append(\"contact_address\", address);\n    bodyFormData.append(\"contact_city\", city);\n    bodyFormData.append(\"contact_state\", state);\n    bodyFormData.append(\"contact_zip\", zip);\n    bodyFormData.append(\"the_file\", blob, \"myboat.pdf\");\n    axios({\n      method: \"post\",\n      url: \"http://localhost/wp-json/boat-builder/v1/dealer\",\n      data: bodyFormData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then(function (response) {\n        setLoading(false);\n        const { data } = response;\n        if (data.status !== 200) {\n          setErrMessage(data.message);\n        } else {\n          setErrMessage(\"\");\n          setSuccess(true);\n        }\n      })\n      .catch(function (response) {\n        setLoading(false);\n        setErrMessage(\"There was some unknown Error, Please try again.\");\n      });\n  };\n  return (\n    <>\n      <div className={success ? \"form-success active\" : \"form-success\"}>\n        <div>\n          <div className=\"icon-container\">\n            <FaCheckCircle />\n          </div>\n          <h2 className=\"message\">Success! Email Sent.</h2>\n        </div>\n      </div>\n      <div className={loading ? \"loader active\" : \"loader\"}></div>\n      <form className=\"formDealer\" onSubmit={submitForm}>\n        {errMessage ? (\n          <div className=\"form-error\">{errMessage}</div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"form-container\">\n          <div className=\"form-input-container\">\n            <label htmlFor=\"fname\">First Name:</label>\n            <input\n              name=\"fname\"\n              type=\"text\"\n              onChange={(e) => setFname(e.target.value)}\n              value={fname}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"lname\">Last Name:</label>\n            <input\n              name=\"lname\"\n              type=\"text\"\n              onChange={(e) => setLname(e.target.value)}\n              value={lname}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"phone\">Phone:</label>\n            <input\n              name=\"phone\"\n              type=\"tel\"\n              onChange={(e) => setPhone(e.target.value)}\n              value={phone}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"address\">Address:</label>\n            <input\n              name=\"address\"\n              type=\"text\"\n              onChange={(e) => setAddress(e.target.value)}\n              value={address}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"city\">City:</label>\n            <input\n              name=\"city\"\n              type=\"text\"\n              onChange={(e) => setCity(e.target.value)}\n              value={city}\n            />\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"state\">State:</label>\n            <select name=\"state\" onChange={(e) => setState(e.target.value)}>\n              <option value=\"\" disabled selected>\n                Select a State\n              </option>\n              <option value=\"AL\">Alabama</option>\n              <option value=\"AK\">Alaska</option>\n              <option value=\"AZ\">Arizona</option>\n              <option value=\"AR\">Arkansas</option>\n              <option value=\"CA\">California</option>\n              <option value=\"CO\">Colorado</option>\n              <option value=\"CT\">Connecticut</option>\n              <option value=\"DE\">Delaware</option>\n              <option value=\"DC\">District Of Columbia</option>\n              <option value=\"FL\">Florida</option>\n              <option value=\"GA\">Georgia</option>\n              <option value=\"HI\">Hawaii</option>\n              <option value=\"ID\">Idaho</option>\n              <option value=\"IL\">Illinois</option>\n              <option value=\"IN\">Indiana</option>\n              <option value=\"IA\">Iowa</option>\n              <option value=\"KS\">Kansas</option>\n              <option value=\"KY\">Kentucky</option>\n              <option value=\"LA\">Louisiana</option>\n              <option value=\"ME\">Maine</option>\n              <option value=\"MD\">Maryland</option>\n              <option value=\"MA\">Massachusetts</option>\n              <option value=\"MI\">Michigan</option>\n              <option value=\"MN\">Minnesota</option>\n              <option value=\"MS\">Mississippi</option>\n              <option value=\"MO\">Missouri</option>\n              <option value=\"MT\">Montana</option>\n              <option value=\"NE\">Nebraska</option>\n              <option value=\"NV\">Nevada</option>\n              <option value=\"NH\">New Hampshire</option>\n              <option value=\"NJ\">New Jersey</option>\n              <option value=\"NM\">New Mexico</option>\n              <option value=\"NY\">New York</option>\n              <option value=\"NC\">North Carolina</option>\n              <option value=\"ND\">North Dakota</option>\n              <option value=\"OH\">Ohio</option>\n              <option value=\"OK\">Oklahoma</option>\n              <option value=\"OR\">Oregon</option>\n              <option value=\"PA\">Pennsylvania</option>\n              <option value=\"RI\">Rhode Island</option>\n              <option value=\"SC\">South Carolina</option>\n              <option value=\"SD\">South Dakota</option>\n              <option value=\"TN\">Tennessee</option>\n              <option value=\"TX\">Texas</option>\n              <option value=\"UT\">Utah</option>\n              <option value=\"VT\">Vermont</option>\n              <option value=\"VA\">Virginia</option>\n              <option value=\"WA\">Washington</option>\n              <option value=\"WV\">West Virginia</option>\n              <option value=\"WI\">Wisconsin</option>\n              <option value=\"WY\">Wyoming</option>\n            </select>\n          </div>\n          <div className=\"form-input-container\">\n            <label htmlFor=\"zip\">Zip:</label>\n            <input\n              name=\"zip\"\n              type=\"text\"\n              onChange={(e) => setZip(e.target.value)}\n              value={zip}\n            />\n          </div>\n        </div>\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    </>\n  );\n};\n\nexport default FormDealer;\n","import { useState } from \"react\";\nimport axios from \"axios\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nconst FormEmail = ({ blob }) => {\n  const [email, setEmail] = useState(\"\");\n  const [errMessage, setErrMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const submitForm = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const bodyFormData = new FormData();\n    bodyFormData.append(\"contact_email\", email);\n    bodyFormData.append(\"the_file\", blob, \"myboat.pdf\");\n    axios({\n      method: \"post\",\n      url: \"http://localhost/wp-json/boat-builder/v1/email\",\n      data: bodyFormData,\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then(function (response) {\n        setLoading(false);\n        const { data } = response;\n        if (data.status !== 200) {\n          setErrMessage(data.message);\n        } else {\n          setErrMessage(\"\");\n          setSuccess(true);\n        }\n      })\n      .catch(function (response) {\n        setLoading(false);\n        setErrMessage(\"There was some unknown Error, Please try again.\");\n      });\n  };\n  return (\n    <>\n      <div className={success ? \"form-success active\" : \"form-success\"}>\n        <div>\n          <div className=\"icon-container\">\n            <FaCheckCircle />\n          </div>\n          <h2 className=\"message\">Success! Email Sent.</h2>\n        </div>\n      </div>\n      <div className={loading ? \"loader active\" : \"loader\"}></div>\n      <form className=\"formEmail\" onSubmit={submitForm}>\n        {errMessage ? (\n          <div className=\"form-error\">{errMessage}</div>\n        ) : (\n          <div></div>\n        )}\n        <div className=\"form-container\">\n          <div className=\"form-input-container\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n            />\n          </div>\n        </div>\n        <input type=\"submit\" value=\"Send\" />\n      </form>\n    </>\n  );\n};\n\nexport default FormEmail;\n","import { FaTimes } from \"react-icons/fa\";\nconst FormPopup = ({ isOpen, onClose, children }) => {\n  return (\n    <div className={`form-popup ${isOpen ? \"active\" : \"\"}`}>\n      <div className=\"form-popup-center\">\n        <div className=\"form-popup-container\">\n          <a className=\"form-popup-close-btn\" onClick={onClose}>\n            <FaTimes size=\"20\" />\n          </a>\n          {children}\n        </div>\n      </div>\n      <div className=\"form-popup-bg\" onClick={onClose}></div>\n    </div>\n  );\n};\nexport default FormPopup;\n","import { ChoiceState } from \"../state/reducers/choiceReducer\";\nimport { Choice, ID } from \"../types\";\n\nexport interface GroupedChoices {\n  [key: ID]: Choice[];\n}\n\nconst groupChoicesByPageId = (choices: ChoiceState) => {\n  let grouped: GroupedChoices = {};\n  choices.allIds.forEach((id) => {\n    const item = choices.byId[id];\n    if (!item) return;\n    const pageId = item.pageId;\n    let groupedChoices = grouped[pageId];\n    if (!groupedChoices) {\n      groupedChoices = [item];\n    } else {\n      groupedChoices.push(item);\n    }\n    grouped[pageId] = groupedChoices;\n  });\n  return grouped;\n};\n\nexport default groupChoicesByPageId;\n","import { StyleSheet } from \"@react-pdf/renderer\";\nconst pdfStyles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 120,\n    paddingHorizontal: 35,\n  },\n  heading: {\n    fontSize: 14,\n    textAlign: \"left\",\n    fontFamily: \"Montserrat\",\n    fontWeight: 700,\n    textTransform: \"uppercase\",\n  },\n  title: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontFamily: \"Oswald\",\n    textTransform: \"uppercase\",\n  },\n  row: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    padding: 4,\n  },\n  bordered: {\n    borderBottomColor: \"#c7c7c7\",\n    borderBottomWidth: \"2\",\n    borderBottomStyle: \"solid\",\n  },\n  column: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flex: 1,\n    padding: 4,\n  },\n  doubleColumn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    flex: 3,\n    padding: 4,\n  },\n  text: {\n    fontSize: 10,\n    textAlign: \"left\",\n    fontFamily: \"Montserrat\",\n  },\n  price: {\n    fontSize: 13,\n    fontFamily: \"Montserrat\",\n    fontWeight: \"bold\",\n    color: \"#008af4\",\n    textAlign: \"right\",\n  },\n});\n\nexport default pdfStyles;\n","import { Font } from \"@react-pdf/renderer\";\n\ninterface fontFamily {\n  family: string;\n  fonts: {\n    [key: string]: any;\n    src: string;\n    fontStyle?: string | undefined;\n    fontWeight?: string | number | undefined;\n  }[];\n}\n\nconst registerFonts = (fontFamilies: fontFamily[]) => {\n  fontFamilies.map((fontFamily) => Font.register(fontFamily));\n};\n\nexport default registerFonts;\n","import { Text, View, Image } from \"@react-pdf/renderer\";\nimport styles from \"./PdfStyles\";\n\ninterface PdfHeaderProps {\n  title: string;\n  imageSrc: string;\n  price: string;\n  discount: string;\n}\n\nconst PdfHeader: React.FC<PdfHeaderProps> = ({\n  title,\n  imageSrc,\n  price,\n  discount,\n}) => {\n  return (\n    <>\n      <Text style={styles.title}>{title} Summary</Text>\n      <View style={{ ...styles.row, ...styles.bordered, padding: 20 }}>\n        <View style={styles.column}>\n          <Image src={imageSrc} />\n        </View>\n        <View style={styles.column}>\n          <Text style={{ ...styles.text, textTransform: \"uppercase\" }}>\n            Total\n          </Text>\n          <Text style={{ ...styles.price, textAlign: \"left\", fontSize: \"30\" }}>\n            {price}\n          </Text>\n          <Text\n            style={{\n              ...styles.price,\n              color: \"#000000\",\n              textAlign: \"left\",\n              fontSize: \"16\",\n            }}\n          >\n            AVID ADVANTAGE PRICE\n          </Text>\n          <Text\n            style={{\n              ...styles.price,\n              fontWeight: \"normal\",\n              color: \"#5d5d5d\",\n              textAlign: \"left\",\n              fontSize: \"17\",\n            }}\n          >\n            {`${discount} MSRP`}\n          </Text>\n        </View>\n      </View>\n    </>\n  );\n};\nexport default PdfHeader;\n","import { Text, View, Image } from \"@react-pdf/renderer\";\nimport styles from \"./PdfStyles\";\n\ninterface PdfFooterProps {}\n\nconst PdfFooter: React.FC<PdfFooterProps> = ({}) => {\n  return (\n    <View\n      fixed\n      style={{\n        position: \"absolute\",\n        bottom: 35,\n        left: 35,\n        right: 35,\n        textAlign: \"center\",\n      }}\n    >\n      <View style={{ ...styles.row, marginTop: 6 }}>\n        <Text style={{ ...styles.text, textAlign: \"center\" }}>\n          Please note: prices do not include freight, prep, title, or other fees\n          and incentives.\n        </Text>\n      </View>\n      <View style={styles.row}>\n        <View style={styles.column}>\n          <Image src=\"https://avid-boats.com/wp-content/uploads/2021/09/avid-boat-logo-black.jpg\" />\n        </View>\n        <View style={styles.doubleColumn}>\n          <Text style={{ ...styles.heading, fontFamily: \"Oswald\" }}>\n            For Your Local Dealer Visit\n          </Text>\n          <Text style={{ ...styles.heading, fontSize: 12 }}>\n            avid-boats.com/find-a-dealer/\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n};\nexport default PdfFooter;\n","import { Text, View } from \"@react-pdf/renderer\";\nimport { connect } from \"react-redux\";\nimport formatMoney from \"../helpers/formatMoney\";\nimport { RootState } from \"../state/reducers\";\nimport { ChoiceState } from \"../state/reducers/choiceReducer\";\nimport { PackagedState } from \"../state/reducers/packagedReducer\";\nimport { Choice, FormData, Page } from \"../types\";\nimport styles from \"./PdfStyles\";\n\ninterface PdfChoiceProps {\n  page: Page;\n  choice: Choice;\n  choices: ChoiceState;\n  packaged: PackagedState;\n  formData: FormData;\n}\n\nconst PdfChoice: React.FC<PdfChoiceProps> = ({\n  page,\n  choice,\n  choices,\n  packaged,\n  formData,\n}) => {\n  const isPackaged = packaged.allIds.includes(choice.id);\n  const section = formData.entities.sections.byId[choice.sectionId];\n  if (!section) return null;\n\n  const packagedChoice = packaged.byId[choice.id];\n  const packagedChoiceOwnerId = packagedChoice?.fromId;\n  const packagedChoiceOwner = packagedChoiceOwnerId\n    ? choices.byId[packagedChoiceOwnerId]\n    : undefined;\n  const packagedChoiceOwnerLabel = packagedChoiceOwner\n    ? packagedChoiceOwner.label\n    : \"\";\n  return (\n    <View style={styles.row}>\n      <View style={styles.column}>\n        <View style={{ display: \"flex\" }}>\n          <Text style={styles.text}>\n            {page.short === \"colors\"\n              ? `${section.label} - ${choice.label}`\n              : choice.label}\n          </Text>\n          {choice.quantity > 1 ? (\n            <Text\n              style={{ ...styles.text, fontWeight: \"bold\" }}\n            >{` x ${choice.quantity}`}</Text>\n          ) : (\n            <></>\n          )}\n        </View>\n      </View>\n      <View style={styles.column}>\n        {isPackaged ? (\n          <Text\n            style={{\n              ...styles.price,\n              fontSize: 8,\n              color: \"#000000\",\n            }}\n          >\n            {`Included in ${packagedChoiceOwnerLabel}`}\n          </Text>\n        ) : choice.discount ? (\n          <View>\n            <Text style={styles.price}>{formatMoney(choice.discount)}</Text>\n            <Text\n              style={{\n                ...styles.price,\n                fontSize: 8,\n                fontWeight: \"normal\",\n                color: \"#5d5d5d\",\n              }}\n            >\n              {formatMoney(choice.price)}\n            </Text>\n          </View>\n        ) : (\n          <Text style={styles.price}>{formatMoney(choice.price)}</Text>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst PdfChoiceConnect = connect((state: RootState) => {\n  return {\n    choices: state.choices,\n    packaged: state.packaged,\n    formData: state.formData,\n  };\n}, {})(PdfChoice);\n\nexport default PdfChoiceConnect;\n","import { Text, View } from \"@react-pdf/renderer\";\nimport { Choice, Page } from \"../types\";\nimport PdfChoice from \"./PdfChoice\";\nimport styles from \"./PdfStyles\";\n\ninterface PdfChoicePagesProps {\n  page?: Page;\n  choicesGroupedByPage?: Choice[];\n}\n\nconst PdfChoicePages: React.FC<PdfChoicePagesProps> = ({\n  page,\n  choicesGroupedByPage,\n}) => {\n  if (!page) return null;\n  if (!choicesGroupedByPage) return null;\n  return (\n    <View style={{ ...styles.row, ...styles.bordered }}>\n      <View style={styles.column}>\n        <Text style={styles.heading}>{page.short}</Text>\n      </View>\n      <View style={styles.doubleColumn}>\n        {choicesGroupedByPage.map((choice) => (\n          <PdfChoice page={page} choice={choice} />\n        ))}\n      </View>\n    </View>\n  );\n};\nexport default PdfChoicePages;\n","import { Document, Page } from \"@react-pdf/renderer\";\nimport { connect, Provider } from \"react-redux\";\nimport formatMoney from \"../helpers/formatMoney\";\nimport { ChoiceState, getTotalPrice } from \"../state/reducers/choiceReducer\";\nimport store from \"../state\";\nimport { RootState } from \"../state/reducers\";\nimport { FormData } from \"../types\";\nimport groupChoicesByPageId from \"../helpers/groupChoicesByPageId\";\nimport styles from \"./PdfStyles\";\nimport registerFonts from \"./registerFonts\";\nimport PdfHeader from \"./PdfHeader\";\nimport PdfFooter from \"./PdfFooter\";\nimport PdfChoicePages from \"./PdfChoicePages\";\n\nregisterFonts([\n  {\n    family: \"Oswald\",\n    fonts: [\n      {\n        src: \"https://fonts.gstatic.com/s/oswald/v36/TK3_WkUHHAIjg75cFRf3bXL8LICs1xZogUE.ttf\",\n      },\n    ],\n  },\n  {\n    family: \"Montserrat\",\n    fonts: [\n      {\n        src: \"https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_cJD7g4.ttf\",\n      },\n      {\n        src: \"https://fonts.gstatic.com/s/montserrat/v15/JTURjIg1_i6t8kCHKm45_dJE7g4.ttf\",\n        fontWeight: 700,\n      },\n    ],\n  },\n]);\n\ninterface PdfDocProps {\n  choices: ChoiceState;\n  total: (withDiscount: boolean) => number;\n  formData: FormData;\n}\n\nconst PdfDoc: React.FC<PdfDocProps> = ({ choices, total, formData }) => {\n  const grouped = groupChoicesByPageId(choices);\n  const title = \"post_title\" in formData.post ? formData.post.post_title : \"\";\n  return (\n    <Document>\n      <Page size=\"LETTER\" style={styles.body}>\n        <PdfHeader\n          title={title}\n          imageSrc={formData.image}\n          price={formatMoney(total(true))}\n          discount={formatMoney(total(false))}\n        />\n        {formData.entities.pages.allIds.map((id) => (\n          <PdfChoicePages\n            page={formData.entities.pages.byId[id]}\n            choicesGroupedByPage={grouped[id]}\n          />\n        ))}\n        <PdfFooter />\n      </Page>\n    </Document>\n  );\n};\n\nconst PdfDocConnect = connect((state: RootState) => {\n  return {\n    choices: state.choices,\n    total: getTotalPrice(state),\n    formData: state.formData,\n  };\n}, {})(PdfDoc);\n\nconst PdfDocWrap = () => (\n  <Provider store={store}>\n    <PdfDocConnect />\n  </Provider>\n);\n\nexport default PdfDocWrap;\n","import { useState } from \"react\";\nimport FormDealer from \"./FormDealer\";\nimport FormEmail from \"./FormEmail\";\nimport FormPopup from \"./FormPopup\";\n\nimport { BlobProvider, pdf } from \"@react-pdf/renderer\";\nimport PdfDocument from \"../pdf/PdfDocument\";\n\nconst SummaryButtons = () => {\n  const [formPopup, setFormPopup] = useState(false);\n  const [form, setForm] = useState(\"\");\n  const closePopup = (e) => {\n    e.preventDefault();\n    setFormPopup(false);\n    setForm(null);\n  };\n\n  const EmailPopup = (e) => {\n    e.preventDefault();\n    setFormPopup(true);\n    setForm(\"email\");\n  };\n\n  const DealerPopup = (e) => {\n    e.preventDefault();\n    setFormPopup(true);\n    setForm(\"dealer\");\n  };\n  return (\n    <BlobProvider document={<PdfDocument />}>\n      {({ blob, url, loading, error }) => {\n        return loading ? (\n          <div>loading pdf...</div>\n        ) : (\n          <>\n            <div className=\"summary-btns\">\n              <a className=\"summary-btn-left\" onClick={EmailPopup}>\n                Send to My Email\n              </a>\n              <a className=\"summary-btn-center\" onClick={DealerPopup}>\n                Send to Dealer\n              </a>\n              <a className=\"summary-btn-right\" href={url} download=\"myboat\">\n                Download\n              </a>\n            </div>\n            {formPopup ? (\n              <FormPopup isOpen={formPopup} onClose={closePopup}>\n                {form === \"email\" ? (\n                  <FormEmail blob={blob} />\n                ) : (\n                  <FormDealer blob={blob} />\n                )}\n              </FormPopup>\n            ) : (\n              \"\"\n            )}\n          </>\n        );\n      }}\n    </BlobProvider>\n  );\n};\n\nexport default SummaryButtons;\n"],"sourceRoot":""}